# .env.example
# Example environment variables for Ledger Automator
# Copy this file to .env and adjust values for your environment

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Secret keys (MUST be unique and secure in production)
LEDGER_SECRET_KEY=your-secret-key-here-must-be-at-least-32-characters-long
LEDGER_JWT_SECRET=your-jwt-secret-here-must-be-at-least-32-characters-long

# Authentication settings
LEDGER_JWT_EXPIRATION=1                    # JWT expiration in hours
LEDGER_SESSION_TIMEOUT=60                  # Session timeout in minutes
LEDGER_MAX_LOGIN_ATTEMPTS=5               # Max failed login attempts
LEDGER_LOCKOUT_DURATION=15                # Account lockout duration in minutes

# File upload security
LEDGER_MAX_FILE_SIZE=10                   # Max file size in MB
LEDGER_ENABLE_VIRUS_SCAN=true            # Enable virus scanning
LEDGER_RATE_LIMIT=60                     # API rate limit per minute

# HTTPS and security headers
LEDGER_FORCE_HTTPS=true                  # Force HTTPS in production
LEDGER_ALLOWED_ORIGINS=https://your-domain.com  # Comma-separated CORS origins

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL connection (required for production)
DATABASE_URL=postgresql://username:password@localhost:5432/ledger_automator

# Database connection pool settings
DB_POOL_SIZE=20                          # Connection pool size
DB_MAX_OVERFLOW=30                       # Max overflow connections
DB_POOL_TIMEOUT=30                       # Connection timeout in seconds
DB_SSL_MODE=require                      # SSL mode: disable, allow, prefer, require

# SSL certificates (optional)
# DB_SSL_CERT=/path/to/client-cert.pem
# DB_SSL_KEY=/path/to/client-key.pem
# DB_SSL_ROOT_CERT=/path/to/ca-cert.pem

# Database debugging (disable in production)
DB_ECHO=false                            # Log SQL queries

# =============================================================================
# CACHE AND SESSION STORAGE
# =============================================================================

# Redis configuration (required for production)
REDIS_URL=redis://localhost:6379/0
REDIS_PASSWORD=your-redis-password       # Redis password (if required)
REDIS_SSL=false                          # Use SSL for Redis connection

# Cache settings
CACHE_TIMEOUT=3600                       # Default cache timeout in seconds
SESSION_REDIS_DB=1                       # Redis database for sessions
SESSION_SECURE=true                      # Secure session cookies

# =============================================================================
# LOGGING AND MONITORING
# =============================================================================

# Log levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO
ROOT_LOG_LEVEL=WARNING

# Log destinations
LOG_TO_FILE=true
LOG_TO_STDOUT=true
LOG_TO_SYSLOG=false

# Log file settings
LOG_DIR=/var/log/ledger-automator         # Log directory path
LOG_FILE_MAX_SIZE=100MB                   # Max log file size
LOG_FILE_BACKUP_COUNT=5                   # Number of backup log files

# External monitoring
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
SENTRY_ENVIRONMENT=production

# Prometheus metrics
ENABLE_PROMETHEUS=true
METRICS_PORT=9090

# =============================================================================
# MACHINE LEARNING CONFIGURATION
# =============================================================================

# Model settings
MODEL_STORAGE_PATH=/var/lib/ledger-automator/models
MODEL_BACKUP_PATH=/var/backups/ledger-automator/models
ML_CONFIDENCE_THRESHOLD=0.7              # Minimum prediction confidence
ML_RETRAIN_THRESHOLD=0.1                 # Accuracy drop threshold for retraining

# Automatic retraining
ML_AUTO_RETRAIN=false                     # Enable automatic retraining
ML_RETRAIN_INTERVAL=30                    # Retrain interval in days
ML_MIN_TRAINING_SAMPLES=100               # Minimum samples for training

# Model security
ML_MODEL_SIGNING=true                     # Enable model signing
ML_SIGNATURE_KEY=your-model-signature-key-here

# Performance limits
ML_MAX_BATCH_SIZE=1000                    # Max prediction batch size
ML_PREDICTION_TIMEOUT=30                  # Prediction timeout in seconds
ML_MONITORING=true                        # Enable model monitoring

# =============================================================================
# API CONFIGURATION
# =============================================================================

# Server settings
API_HOST=0.0.0.0                         # API host
API_PORT=8000                            # API port
API_WORKERS=4                            # Number of worker processes

# Request limits
API_MAX_REQUEST_SIZE=16777216            # Max request size in bytes (16MB)
API_REQUEST_TIMEOUT=30                   # Request timeout in seconds
API_KEEPALIVE_TIMEOUT=5                  # Keep-alive timeout

# API documentation
ENABLE_API_DOCS=false                    # Enable API documentation in production

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================

# Database backup
ENABLE_DB_BACKUP=true                    # Enable automatic database backup
BACKUP_INTERVAL_HOURS=6                  # Backup interval in hours
BACKUP_RETENTION_DAYS=30                 # Backup retention in days

# S3 backup (optional)
BACKUP_S3_BUCKET=your-backup-bucket-name
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_DEFAULT_REGION=us-east-1

# =============================================================================
# ALERTING AND NOTIFICATIONS
# =============================================================================

# Email alerts
ENABLE_EMAIL_ALERTS=false
ALERT_EMAIL_FROM=alerts@your-domain.com
ALERT_EMAIL_TO=admin@your-domain.com,ops@your-domain.com

# SMTP configuration
SMTP_HOST=smtp.your-email-provider.com
SMTP_PORT=587
SMTP_USERNAME=your-smtp-username
SMTP_PASSWORD=your-smtp-password
SMTP_USE_TLS=true

# Performance thresholds
HEALTH_CHECK_INTERVAL=30                 # Health check interval in seconds
SLOW_QUERY_THRESHOLD=1.0                 # Slow query threshold in seconds
HIGH_MEMORY_THRESHOLD=80                 # High memory usage threshold (%)

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# Application metadata
APP_VERSION=1.0.0
TZ=UTC                                   # Timezone

# Feature flags
ENABLE_API=true                          # Enable REST API
ENABLE_WEB_UI=true                       # Enable Streamlit web UI
ENABLE_BATCH_PROCESSING=true             # Enable batch processing

# Development/debugging (disable in production)
DEBUG=false
TESTING=false

# Configuration validation
LEDGER_STRICT_CONFIG=true                # Exit on configuration errors

# =============================================================================
# DOCKER AND CONTAINER SETTINGS
# =============================================================================

# These are typically set automatically in containerized environments
# DOCKER_CONTAINER=true
# KUBERNETES_NAMESPACE=ledger-automator
# POD_NAME=ledger-automator-pod
# NODE_NAME=worker-node-1

# =============================================================================
# CUSTOM BUSINESS SETTINGS
# =============================================================================

# Add your organization-specific settings here
# ORG_NAME=Your Organization
# ORG_LOGO_URL=https://your-domain.com/logo.png
# CUSTOM_CATEGORIES=Food,Transport,Healthcare
# DEFAULT_CURRENCY=USD
# FISCAL_YEAR_START=01-01

# =============================================================================
# NOTES FOR PRODUCTION DEPLOYMENT
# =============================================================================

# 1. SECURITY:
#    - Generate secure random values for all secret keys
#    - Use strong passwords for database and Redis
#    - Enable SSL/TLS for all connections
#    - Set up proper firewall rules
#    - Use environment-specific secrets management

# 2. PERFORMANCE:
#    - Adjust pool sizes based on expected load
#    - Monitor memory usage and adjust accordingly
#    - Set appropriate timeout values
#    - Configure caching for optimal performance

# 3. MONITORING:
#    - Set up log aggregation (ELK, Splunk, etc.)
#    - Configure alerting for critical errors
#    - Monitor database and Redis performance
#    - Set up health checks and uptime monitoring

# 4. BACKUP:
#    - Test backup and restore procedures
#    - Set up offsite backup storage
#    - Document recovery procedures
#    - Automate backup verification

# 5. COMPLIANCE:
#    - Review data privacy requirements
#    - Implement audit logging
#    - Set up data retention policies
#    - Document security procedures